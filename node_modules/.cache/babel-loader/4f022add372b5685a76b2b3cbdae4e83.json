{"ast":null,"code":"import React from 'react';\nconst types = {\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Preencha um email válido'\n  },\n  password: {\n    regex: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\n    message: 'A senha precisa ter 1 caracter maíusculo, 1 minúsculo e 1 digito. Com no mínimo 8 caracteres.'\n  },\n  number: {\n    regex: /^\\d+$/,\n    message: 'Utilize números apenas.'\n  }\n};\nconst useForm = type => {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(null);\n  function validate(value) {\n    if (type === false) return true;\n    if (value.length === 0) {\n      setError('Preencha um valor.');\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n  function onChange(_ref) {\n    let {\n      target\n    } = _ref;\n    if (error) validate(target.value);\n    setValue(target.value);\n  }\n  return {\n    value,\n    setValue,\n    onChange,\n    error,\n    validate: () => validate(value),\n    onBlur: () => validate(value)\n  };\n};\nexport default useForm;","map":{"version":3,"names":["React","types","email","regex","message","password","number","useForm","type","value","setValue","useState","error","setError","validate","length","test","onChange","target","onBlur"],"sources":["C:/Users/Thiago/Desktop/projetos/react/dogs/dogs/src/Hooks/useForm.js"],"sourcesContent":["import React from 'react';\n\nconst types = {\n  email: {\n    regex: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    message: 'Preencha um email válido',\n  },\n  password: {\n    regex: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/,\n    message:\n      'A senha precisa ter 1 caracter maíusculo, 1 minúsculo e 1 digito. Com no mínimo 8 caracteres.',\n  },\n  number: {\n    regex: /^\\d+$/,\n    message: 'Utilize números apenas.',\n  },\n};\n\nconst useForm = (type) => {\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(null);\n\n  function validate(value) {\n    if (type === false) return true;\n    if (value.length === 0) {\n      setError('Preencha um valor.');\n      return false;\n    } else if (types[type] && !types[type].regex.test(value)) {\n      setError(types[type].message);\n      return false;\n    } else {\n      setError(null);\n      return true;\n    }\n  }\n\n  function onChange({ target }) {\n    if (error) validate(target.value);\n    setValue(target.value);\n  }\n\n  return {\n    value,\n    setValue,\n    onChange,\n    error,\n    validate: () => validate(value),\n    onBlur: () => validate(value),\n  };\n};\n\nexport default useForm;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE;IACLC,KAAK,EAAE,uJAAuJ;IAC9JC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRF,KAAK,EAAE,iDAAiD;IACxDC,OAAO,EACL;EACJ,CAAC;EACDE,MAAM,EAAE;IACNH,KAAK,EAAE,OAAO;IACdC,OAAO,EAAE;EACX;AACF,CAAC;AAED,MAAMG,OAAO,GAAIC,IAAI,IAAK;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACW,QAAQ,CAAC,IAAI,CAAC;EAE9C,SAASG,QAAQ,CAACL,KAAK,EAAE;IACvB,IAAID,IAAI,KAAK,KAAK,EAAE,OAAO,IAAI;IAC/B,IAAIC,KAAK,CAACM,MAAM,KAAK,CAAC,EAAE;MACtBF,QAAQ,CAAC,oBAAoB,CAAC;MAC9B,OAAO,KAAK;IACd,CAAC,MAAM,IAAIZ,KAAK,CAACO,IAAI,CAAC,IAAI,CAACP,KAAK,CAACO,IAAI,CAAC,CAACL,KAAK,CAACa,IAAI,CAACP,KAAK,CAAC,EAAE;MACxDI,QAAQ,CAACZ,KAAK,CAACO,IAAI,CAAC,CAACJ,OAAO,CAAC;MAC7B,OAAO,KAAK;IACd,CAAC,MAAM;MACLS,QAAQ,CAAC,IAAI,CAAC;MACd,OAAO,IAAI;IACb;EACF;EAEA,SAASI,QAAQ,OAAa;IAAA,IAAZ;MAAEC;IAAO,CAAC;IAC1B,IAAIN,KAAK,EAAEE,QAAQ,CAACI,MAAM,CAACT,KAAK,CAAC;IACjCC,QAAQ,CAACQ,MAAM,CAACT,KAAK,CAAC;EACxB;EAEA,OAAO;IACLA,KAAK;IACLC,QAAQ;IACRO,QAAQ;IACRL,KAAK;IACLE,QAAQ,EAAE,MAAMA,QAAQ,CAACL,KAAK,CAAC;IAC/BU,MAAM,EAAE,MAAML,QAAQ,CAACL,KAAK;EAC9B,CAAC;AACH,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module"}