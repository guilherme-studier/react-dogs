{"ast":null,"code":"/* eslint-disable func-style */\nexport var IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport var IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport var IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport var IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce(function (prev, curr, key) {\n    if (whitelist && whitelist[key]) {\n      curr = shallowToJS(curr);\n    }\n    prev[key] = curr;\n    return prev;\n  }, isList(x) ? [] : {}) : x;\n}","map":{"version":3,"names":["IMMUTABLE_ITERABLE","IMMUTABLE_RECORD","IMMUTABLE_LIST","IMMUTABLE_MAP","isIterable","x","isRecord","isImmutable","isList","isMap","shallowToJS","whitelist","reduce","prev","curr","key"],"sources":["C:/Users/Thiago/Desktop/projetos/react/dogs/dogs/node_modules/victory-core/es/victory-util/immutable.js"],"sourcesContent":["/* eslint-disable func-style */\nexport var IMMUTABLE_ITERABLE = \"@@__IMMUTABLE_ITERABLE__@@\";\nexport var IMMUTABLE_RECORD = \"@@__IMMUTABLE_RECORD__@@\";\nexport var IMMUTABLE_LIST = \"@@__IMMUTABLE_LIST__@@\";\nexport var IMMUTABLE_MAP = \"@@__IMMUTABLE_MAP__@@\";\nexport function isIterable(x) {\n  return !!(x && x[IMMUTABLE_ITERABLE]);\n}\nexport function isRecord(x) {\n  return !!(x && x[IMMUTABLE_RECORD]);\n}\nexport function isImmutable(x) {\n  return isIterable(x) || isRecord(x);\n}\nexport function isList(x) {\n  return !!(x && x[IMMUTABLE_LIST]);\n}\nexport function isMap(x) {\n  return !!(x && x[IMMUTABLE_MAP]);\n}\nexport function shallowToJS(x, whitelist) {\n  return isIterable(x) ? x.reduce(function (prev, curr, key) {\n    if (whitelist && whitelist[key]) {\n      curr = shallowToJS(curr);\n    }\n\n    prev[key] = curr;\n    return prev;\n  }, isList(x) ? [] : {}) : x;\n}"],"mappings":"AAAA;AACA,OAAO,IAAIA,kBAAkB,GAAG,4BAA4B;AAC5D,OAAO,IAAIC,gBAAgB,GAAG,0BAA0B;AACxD,OAAO,IAAIC,cAAc,GAAG,wBAAwB;AACpD,OAAO,IAAIC,aAAa,GAAG,uBAAuB;AAClD,OAAO,SAASC,UAAU,CAACC,CAAC,EAAE;EAC5B,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACL,kBAAkB,CAAC,CAAC;AACvC;AACA,OAAO,SAASM,QAAQ,CAACD,CAAC,EAAE;EAC1B,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACJ,gBAAgB,CAAC,CAAC;AACrC;AACA,OAAO,SAASM,WAAW,CAACF,CAAC,EAAE;EAC7B,OAAOD,UAAU,CAACC,CAAC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAAC;AACrC;AACA,OAAO,SAASG,MAAM,CAACH,CAAC,EAAE;EACxB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACH,cAAc,CAAC,CAAC;AACnC;AACA,OAAO,SAASO,KAAK,CAACJ,CAAC,EAAE;EACvB,OAAO,CAAC,EAAEA,CAAC,IAAIA,CAAC,CAACF,aAAa,CAAC,CAAC;AAClC;AACA,OAAO,SAASO,WAAW,CAACL,CAAC,EAAEM,SAAS,EAAE;EACxC,OAAOP,UAAU,CAACC,CAAC,CAAC,GAAGA,CAAC,CAACO,MAAM,CAAC,UAAUC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAE;IACzD,IAAIJ,SAAS,IAAIA,SAAS,CAACI,GAAG,CAAC,EAAE;MAC/BD,IAAI,GAAGJ,WAAW,CAACI,IAAI,CAAC;IAC1B;IAEAD,IAAI,CAACE,GAAG,CAAC,GAAGD,IAAI;IAChB,OAAOD,IAAI;EACb,CAAC,EAAEL,MAAM,CAACH,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAGA,CAAC;AAC7B"},"metadata":{},"sourceType":"module"}